name: ci

on:
  pull_request:
  push:
    branches:
      - main
      - stable/**

permissions:
  id-token: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/determinate-nix-action@v3
      - uses: DeterminateSystems/flakehub-cache-action@v2
      - run: nix flake show --all-systems
      - run: nix flake check --no-build

  fmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/determinate-nix-action@v3
      - uses: DeterminateSystems/flakehub-cache-action@v2
      - run: nix fmt -- --fail-on-change

  discover:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/determinate-nix-action@v3
      - uses: DeterminateSystems/flakehub-cache-action@v2
      - id: set-matrix
        run: |
          MATRIX=$(nix eval --json '#.packages' | jq -c '{
            include: (
              [.["x86_64-linux"] | to_entries[] | {system: "x86_64-linux", package: .key}] +
              [.["aarch64-linux"] | to_entries[] | {system: "aarch64-linux", package: .key}]
            )
          }')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "Matrix: $MATRIX"

  build:
    needs: discover
    runs-on: ${{ matrix.system == 'aarch64-linux' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/determinate-nix-action@v3
      - uses: DeterminateSystems/flakehub-cache-action@v2
      - run: nix build --print-build-logs .#${{ matrix.package }}
